name: Telebot Deploy

on:

  pull_request:
    types:
      - closed
    branches: [ master ]
    paths-ignore:
      - 'spider/**'
      - 'README.md'
      - '.github/**'

  workflow_dispatch:

jobs:
  build_image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      image_id: ${{ steps.image_digest.outputs.image_id }}
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/telebot:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Image digest
        id: image_digest
        run: echo "::set-output name=image_id::${{ steps.docker_build.outputs.digest }}"

  deploy:
    needs:
      - build_image
    runs-on: self-hosted
    if: ${{ needs.build_image.outputs.image_id }} != ""
    steps:
      - name: Deploy telebot
        run: |
          cd ~/telebot
          sudo ./deploy.sh